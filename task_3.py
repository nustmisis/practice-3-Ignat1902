# -*- coding: utf-8 -*-
"""
Если вы когда-нибудь пытались собирать номера мобильных телефонов, то наверняка
знаете, что почти любые 10 человек используют как минимум пяток различных
способов записать номер телефона. Кто-то начинает с +7, кто-то просто с 7 или 8,
а некоторые вообще не пишут префикс. Трёхзначный код кто-то отделяет пробелами,
кто-то при помощи дефиса, кто-то скобками (и после скобки ещё пробел некоторые
добавляют). После следующих трёх цифр кто-то ставит пробел, кто-то дефис, кто-то
ничего не ставит. И после следующих двух цифр — тоже. А некоторые начинают за
здравие, а заканчивают… В общем очень неудобно!

На вход даётся номер телефона в России, как его мог бы ввести человек.
Необходимо его переформатировать в формат +7 123 456-78-90. Если с номером
что-то не так, то нужно вывести строчку Fail!

Примеры:

# | Ввод                Вывод
--+-------------------------------------
1 | +7 123 456-78-90    +7 123 456-78-90
2 | 8(123)456-78-90     +7 123 456-78-90
3 | 1234567890          +7 123 456-78-90
4 | 123456789           Fail!
5 | +9 123 456-78-90    Fail!
6 | +7 123 456+78=90    Fail!

Для корректной работы автоматических тестов не переименовывайте функцию
format_phone_number!
"""

import re


def format_phone_number(text):
    # ваше решение:
    regex_1 = r"[+]7\s\d{3}\s\d{3}-\d{2}-\d{2}"
    regex_2 = r"8\(\d{3}\)\d{3}-\d{2}-\d{2}"
    regex_3 = r"\d{10}"

    if re.match(regex_1,text):
        return text
    elif re.match(regex_2,text):
        digital = "".join(re.findall(r"\d",text))
        return "+7 {} {}-{}-{}".format(digital[1:4],digital[4:7],digital[7:9],digital[9:])
    elif re.match(regex_3,text):
        return "+7 {} {}-{}-{}".format(text[0:3],text[3:6],text[6:8],text[8:])
    else:
        return "Fail!"
